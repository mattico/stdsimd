environment:
  matrix:
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    # Ensure MinGW works, but we need to download the 32-bit MinGW compiler from a
    # custom location.
    #
    # Note that the MinGW builds have tons of references to
    # `rust_eh_unwind_resume` in the debug LTO builds that aren't optimized out,
    # so we skip that test for now. Would be great to not skip it!
    - TARGET: i686-pc-windows-gnu
      MINGW_URL: https://s3.amazonaws.com/rust-lang-ci
      MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z
      MINGW_DIR: mingw32
    - TARGET: x86_64-pc-windows-gnu

install:
  - git submodule update --init
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init.exe --default-host x86_64-pc-windows-msvc --default-toolchain nightly -y
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - if NOT "%TARGET%" == "x86_64-pc-windows-msvc" rustup target add %TARGET%

  # Use the system msys
  - set PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH%

  # download a custom compiler otherwise
  - if defined MINGW_URL appveyor DownloadFile %MINGW_URL%/%MINGW_ARCHIVE%
  - if defined MINGW_URL 7z x -y %MINGW_ARCHIVE% > nul
  - if defined MINGW_URL set PATH=C:\Python27;%CD%\%MINGW_DIR%\bin;C:\msys64\usr\bin;%PATH%

  - rustc -Vv
  - cargo -V

build: false

test_script:
  - sh ci/run.sh %TARGET%
